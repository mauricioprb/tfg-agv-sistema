generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_LOCAL")
}

// Padr√£o do next-auth
model User {
  id            String    @id @default(uuid())
  name          String?   @map("nome")
  email         String    @unique @map("email")
  emailVerified DateTime? @map("email_verificado")
  image         String?   @map("imagem")
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now()) @map("criado_em")
  updatedAt     DateTime  @updatedAt @map("atualizado_em")
  AGV           AGV[]

  @@map("usuarios")
}

model Account {
  userId            String  @map("usuario_id")
  type              String  @map("tipo")
  provider          String  @map("provedor")
  providerAccountId String  @map("id_conta_provedor")
  refresh_token     String? @map("refresh_token")
  access_token      String? @map("access_token")
  expires_at        Int?    @map("expira_em")
  token_type        String? @map("tipo_token")
  scope             String? @map("escopo")
  id_token          String? @map("id_token")
  session_state     String? @map("estado_sessao")

  createdAt DateTime @default(now()) @map("criado_em")
  updatedAt DateTime @updatedAt @map("atualizado_em")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("contas")
}

model Session {
  sessionToken String   @unique @map("token_sessao")
  userId       String   @map("usuario_id")
  expires      DateTime @map("expira_em")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("criado_em")
  updatedAt DateTime @updatedAt @map("atualizado_em")

  @@map("sessoes")
}

model AGV {
  id            String       @id @default(uuid())
  status        String
  velocidade    Float
  tempoOperacao Float        @map("tempo_operacao")
  usuarioId     String       @map("usuario_id")
  transportes   Transporte[]
  usuario       User         @relation(fields: [usuarioId], references: [id])

  criadoEm          DateTime            @default(now()) @map("criado_em")
  atualizadoEm      DateTime            @updatedAt @map("atualizado_em")
  Erro              Erro[]
  RegistroAtividade RegistroAtividade[]

  @@map("agv")
}

model Transporte {
  id                   String              @id @default(uuid())
  horaInicio           String
  rotaId               String              @map("rota_id")
  tensaoInicialBateria Float               @map("tensao_inicial_bateria")
  tensaoFinalBateria   Float               @map("tensao_final_bateria")
  status               String
  finalizado           Boolean
  agvId                String              @map("agv_id")
  rota                 Rota                @relation(fields: [rotaId], references: [id])
  agv                  AGV                 @relation(fields: [agvId], references: [id])
  cargas               Carga[]
  registroAtividades   RegistroAtividade[]

  criadoEm DateTime @default(now()) @map("criado_em")

  @@map("transportes")
}

model Carga {
  id          String @id @default(uuid())
  comprimento Float
  peso        Float
  altura      Float
  tipo        String
  quantidade  Int

  criadoEm     DateTime    @default(now()) @map("criado_em")
  Transporte   Transporte? @relation(fields: [transporteId], references: [id])
  transporteId String?

  @@map("cargas")
}

model Rota {
  id          String       @id @default(uuid())
  nome        String
  transportes Transporte[]

  criadoEm DateTime @default(now()) @map("criado_em")

  @@map("rotas")
}

model RegistroAtividade {
  id           String  @id @default(uuid())
  evento       String
  agvId        String  @map("agv_id")
  agv          AGV     @relation(fields: [agvId], references: [id])
  transporteId String? @map("transporte_id")

  criadoEm   DateTime    @default(now()) @map("criado_em")
  Transporte Transporte? @relation(fields: [transporteId], references: [id])

  @@map("registro_atividades")
}

model Erro {
  id        String @id @default(uuid())
  codigo    String @map("codigo_erro")
  descricao String
  agvId     String @map("agv_id")
  agv       AGV    @relation(fields: [agvId], references: [id])

  criadoEm DateTime @default(now()) @map("criado_em")

  @@map("erros")
}
